# meta developer: @MartyyyK

from .. import loader, utils
from telethon.tl.types import Message
import urllib.parse

@loader.tds
class SearchPic(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    strings = {"name": "SearchPic"}

    @loader.unrestricted
    async def spiccmd(self, message: Message):
        """–ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .spic <–∑–∞–ø—Ä–æ—Å>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
            return

        try:
            query = urllib.parse.quote_plus(args)
            image_url = f"https://yandex.uz/images/touch/search/?text={query}"
            
            await message.delete()
            await self.inline.form(
                message=message,
                text = f"üéë –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ\n‚úç –ó–∞–ø—Ä–æ—Å: {args}",
                photo=image_url,
                reply_markup=None
            )

        except Exception as e:
            await utils.answer(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")