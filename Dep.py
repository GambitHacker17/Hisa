# meta developer: @MartyyyK

import asyncio
import telethon as tl
from .. import loader, utils

@loader.tds
class Dep(loader.Module):
    """–î–µ–ø–Ω–∏ –≤—Å—ë —á—Ç–æ —Ö–æ—á–µ—à—å"""

    strings = {
        "name": "dep",
    }

    @loader.command()
    async def –¥–µ–ø–∞—é(self, message):
        """ - —Ç–æ, —á—Ç–æ –¥–µ–ø–Ω–µ—à—å"""
        stavka = utils.get_args_raw(message)
        if not stavka:
            return await utils.answer(message, f"–ê —á—Ç–æ –¥–µ–ø–∞—Ç—å —Ç–æ?")
        await utils.answer(message, f"<b>–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏: {stavka}</b>\n–ù—É —á—Ç–æ–∂, –Ω–∞—á–∏–Ω–∞–µ–ºüòà")
        await asyncio.sleep(2)
        cas = await utils.answer_file(message, tl.types.InputMediaDice('üé∞'))
        await asyncio.sleep(3.1)
        await message.respond(f"<b>–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ X2 {stavka}</b>\n–ù–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ", reply_to=cas.id) if cas.dice.value in [64, 1, 43, 22] else await message.respond(f"<b>–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {stavka}</b>\n–î–µ–ª–∞–π –¥–æ–¥–µ–ø", reply_to=cas.id)